<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
  <!ENTITY legal SYSTEM "legal.xml">
  <!ENTITY appversion "0.8">
  <!ENTITY manrevision "0.1">
  <!ENTITY date "20 June 2004">
  <!ENTITY app "Glom">
  <!-- Information about the entities
       The legal.xml file contains legal information, there is no need to edit the file. 
       Use the appversion entity to specify the version of the application.
       Use the manrevision entity to specify the revision number of this manual.
       Use the date entity to specify the release date of this manual.
       Use the app entity to specify the name of the application. -->
]>
<!-- 
      (Do not remove this comment block.)
  Maintained by the GNOME Documentation Project
  http://developer.gnome.org/projects/gdp
  Template version: 2.0 beta
  Template last modified Apr 11, 2002
-->
<!-- =============Document Header ============================= -->
<article id="index" lang="en">
<!-- please do not change the id; for translations, change lang to -->
<!-- appropriate code -->
  <articleinfo> 
    <title>&app; User Guide V&manrevision;</title>       
    <subtitle>for &app; v&appversion;</subtitle>

    <copyright> 
      <year>2004</year> 
      <holder>Murray Cumming</holder> 
    </copyright> 
<!-- translators: uncomment this:

  <copyright>
   <year>2002</year>
   <holder>ME-THE-TRANSLATOR (Latin translation)</holder>
  </copyright>

   -->
<!-- An address can be added to the publisher information.  If a role is 
     not specified, the publisher/author is the same for all versions of the 
     document.  -->
    <publisher> 
      <publishername> Glom Development Team </publishername> 
    </publisher> 

   &legal;
   <!-- This file  contains link to license for the documentation (GNU FDL), and 
        other legal stuff such as "NO WARRANTY" statement. Please do not change 
	any of this. -->

    <authorgroup> 
      <author role="maintainer"> 
		<firstname>Murrayc</firstname> 
		<surname>Cumming</surname> 
		<affiliation> 
	  		<orgname>Glom Development Team</orgname> 
	  		<address> <email>murrayc@murrayc.com</email> </address> 
		</affiliation> 
      </author> 
      
<!-- This is appropriate place for other contributors: translators,
     maintainers,  etc. Commented out by default.
     
      <othercredit role="translator">
		<firstname>Latin</firstname> 
		<surname>Translator 1</surname> 
		<affiliation> 
	  		<orgname>Latin Translation Team</orgname> 
	  		<address> <email>translator@gnome.org</email> </address> 
		</affiliation>
		<contrib>Latin translation</contrib>
      </othercredit>
-->
    </authorgroup>


<!-- According to GNU FDL, revision history is mandatory if you are -->
<!-- modifying/reusing someone else's document.  If not, you can omit it. -->
<!-- Remember to remove the &manrevision; entity from the revision entries other
-->
<!-- than the current revision. -->
<!-- The revision numbering system for GNOME manuals is as follows: -->
<!-- * the revision number consists of two components -->
<!-- * the first component of the revision number reflects the release version of the GNOME desktop. -->
<!-- * the second component of the revision number is a decimal unit that is incremented with each revision of the manual. -->
<!-- For example, if the GNOME desktop release is V2.x, the first version of the manual that -->
<!-- is written in that desktop timeframe is V2.0, the second version of the manual is V2.1, etc. -->
<!-- When the desktop release version changes to V3.x, the revision number of the manual changes -->
<!-- to V3.0, and so on. -->  
    <revhistory>
      <revision> 
		  <revnumber>Glom &appversion;</revnumber> 
		  <date>&date;</date> 
		  <revdescription> 
			 <para role="author">Murray Cumming</para> 
			 <para role="publisher">Murray Cumming</para> 
		  </revdescription> 
		</revision>
    </revhistory> 

    <releaseinfo>This manual describes version &appversion; of &app;
    </releaseinfo> 
    <legalnotice> 
      <title>Feedback</title> 
      <para>To report a bug or make a suggestion regarding the &app; or 
	this manual can be submitted to the 
	<ulink url="http://bugzilla.gnome.org" type="http">GNOME Bugzilla
	</ulink>, under the &app; product. Please search bugzilla before
	submitting your bug to ensure that yours hasn't already been reported.
      </para>
<!-- Translators may also add here feedback address for translations -->
    </legalnotice> 

    <abstract role="description">
      <para>User manual for Glom.</para>
    </abstract>
  </articleinfo> 

  <indexterm zone="index"> 
    <primary>MY-GNOME-APP</primary> 
  </indexterm> 
  <indexterm zone="index"> 
    <primary>mygnomeapp</primary> 
  </indexterm>

<!-- ============= Document Body ============================= -->
<!-- ============= Introduction ============================== -->
<!-- Use the Introduction section to give a brief overview of what
     the application is and what it does. -->
  <sect1 id="mrp-introduction"> 
    <title>Introduction</title> 
    <para>&app; allows you to design and use database systems.</para> 
  </sect1>

<!-- =========== Getting Started ============================== -->
<!-- Use the Getting Started section to describe the steps required
     to start the application and to describe the user interface components
     of the application. If there is other information that it is important
     for readers to know before they start using the application, you should
     also include this information here. 
     If the information about how to get started is very short, you can 
     include it in the Introduction and omit this section. -->

  <sect1 id="glom-getting-started"> 
    <title>Getting Started</title> 

    <sect2 id="glom-start">
    <title>Starting &app;</title>
    <para>You can start <application>&app;</application> in the following ways:
    </para> 
    <variablelist>
    	<varlistentry>
    		<term><guimenu>Applications</guimenu> menu</term>
    		<listitem>
    		<para>Choose 
    		<menuchoice>
    		<guisubmenu>Office</guisubmenu>
    		<guimenuitem>&app;</guimenuitem>
    		</menuchoice>. </para>
    		</listitem>
    	</varlistentry>
    </variablelist>
    </sect2>

    <sect2 id="glom-when-start">
    <title>When You Start &app;</title>
    <para>When you start <application>&app;</application>, the following window is 
	displayed.</para>

    <!-- ==== Figure ==== -->
      <figure id="newproject"> 
	<title>&app; Start Up Window</title> 
	<screenshot> 
	  <mediaobject> 
	    <imageobject><imagedata
		fileref="figures/start.png" format="PNG"/> 
	    </imageobject>
	    <textobject> 
	      <phrase>Shows &app; main window.
	      </phrase> 
	    </textobject> 
	  </mediaobject> 
	</screenshot> 
      </figure>
    <!-- ==== End of Figure ==== -->
  </sect2>
  </sect1>
<!-- ================ Usage ================================ -->
<!-- Use this section to describe how to use the application to perform the tasks for 
  which the application is designed. -->


    <sect1 id="glom-operator-usage">
    <title>Using Glom as an Operator</title>
    <para>To open an existing glom document, either open that document from the File Manager, or choose Glom from the Applications menu, and then choose the document when asked. Glom will ask you for a user name and password to access the database. Your administrator will provide your user name and password.</para>

    <para>When you open an existing document, Glom will be in <literal>Operator</literal> <literal>user level</literal>. This user level allows you to find and edit records, but does not allow you to change the fundamental structure of the database.</para>

    <sect2>
    <title>Navigation</title>
    <para>Each database has several tables. To look at a different table, choose <literal>Table</literal> from the <literal>Navigate</literal> menu. Then double-click on the table, or select it and click the <literal>Open</literal> button.</para>
    </sect2>

    <sect2>
    <title>Entering Data</title>
    <para>When in <literal>Data Mode</literal>, you can enter information into either the <literal>List</literal> or <literal>Details</literal> view. The List view shows many records at once, but does not show every field. The details view shows only one record, and shows all the fields arranged suitably.</para>
    <para>When you enter data into a field it will be saved into the database immediately after you finish editing the field. If it is a date or time field then the data format will be checked for you.</para> 
    <para>To create a new record just click the <literal>New</literal> button. A new record will be created with blank fields for you to fill in.</para>
    </sect2>

    <sect2>
    <title>Finding Data</title>
    <para>Choose <literal>Find Mode</literal> from the Mode menu. The fields in the List and Details views will now be empty, and a Find button will appear at the bottom of the window.</para>
    <para>Enter information, or part of the information, into a field to find records with that information in that field. For instance, enter Jim into a name field to find records with &quot;Jim&quot; or &quot;Jimmy&quot; in the name.</para> 
    <para>When you press the <literal>Find</literal> button, glom will search for records and then display them. If only one record is found then it will show you that record in the Details view. If several records are found then it will show you those records in the List view.</para>
    </sect2>


    </sect1>

    <sect1 id="glom-developer-usage">
    <title>Using Glom as a Developer</title>
    <para>When you create a new document, Glom will be in the <literal>Developer</literal> <literal>user level</literal>. You can also change to the Developer user level after opening an existing document, with the <literal>User Level</literal> menu. Glom will only allow this if the administrator has allowed it.</para>

    <sect2>
    <title>Adding Tables</title>
    <para>You can see the list of existing tables by choosing <literal>Table</literal> from the <literal>Navigate</literal> menu. You will also see this window after connecting to a database server, after creating a new document. To create a new table, click the <literal>Add</literal> button and enter the name for the new table. This name should not contain any spaces or special characters. Glom will suggest a human-readable title for this table. <literal>Operators</literal> will see this title instead of the actual table name. You can also marka a tables as <literal>hidden</literal> from Operators. For instance, Operators should see &quot;Invoice Lines&quot; as related records from the &quot;Invoices&quot; table, but they should never be able to navigate directly to the &quot;Invoice Lines&quot; table.</para>
    <para>You can also specify one table as the <literal>default table</literal>. This table will be shown whenever an operator opens an existing document, without asking him to select a table from the list.</para>
    <para>You can also use this window to rename an existing table.</para>
    <para>Click the <literal>Open</literal> button to look at the selected table.</para>
    </sect2>

    <sect2>
    <title>Editing Fields</title>
    <para>Choose <literal>Fields</literal> from the <literal>Developer</literal> menu. This shows the list of fields in the table. New tables automatically have a primary key field, but you can change this field if necessary.</para>
    <para>Click the <literal>Add</literal> button to add a new field, then enter the name of the new field. The name should not contain spaces or special characters. Glom will guess an appropriate human-readable title for this field, but you can edit this. <literal>Operators</literal> will see this title instead of the actual field name.</para> 
    <para>To specify more field details, select the field and click the <literal>Details</literal> button.</para>

    <figure id="developer-editing-fields"> 
	<title>Editing Fields</title> 
	<screenshot> 
	  <mediaobject> 
	    <imageobject><imagedata
		fileref="figures/glom_design_fields.png" format="PNG"/> 
	    </imageobject>
	    <textobject> 
	      <phrase>Editing the table's fields.
	      </phrase> 
	    </textobject> 
	  </mediaobject> 
	</screenshot> 
     </figure>


    <sect3>
    <title>Primary Keys</title>
    <para>Each table must have one, and only one, <literal>Primary Key</literal>. The value in this field will be unique, meaning that each value in this field will appear in only one record in the table. For instance, each record in a &quot;Customers&quot; table would have a &quot;Customer ID&quot;. This value will be used to refer to that customer from other tables, such as &quot;Projects&quot; and &quot;Invoices&quot; records. See the <link linkend="sec-developer-relationships">Creating Relationships</link> section to see how you can relate tables together.</para>
    </sect3> 

    <sect3>
    <title>Field Types</title>
    <para>Glom offers a few simple field types:
    <orderedlist>
<listitem><simpara>Number</simpara></listitem>
<listitem><simpara>Text</simpara></listitem>
<listitem><simpara>Date</simpara></listitem>
<listitem><simpara>Time</simpara></listitem>
<listitem><simpara>Boolean - either true or false</simpara></listitem>
<listitem><simpara>Image</simpara></listitem>
</orderedlist>
    </para>
    </sect3>
  
    <sect3>
    <title>Calculated Fields</title>
    <para>Field values can be calculated in terms of other fields, using the Python programming language. This calculation should be the implementation of a python function, which should return a value. The return value will be used as the value of the field. This value will be recalculated every time one of the source fields changes. TODO: This only works for default values at the moment, and you can not use field values in the calculation yet.</para>
    <para>You can also use calculations to specify a default value for fields, by selecting the <literal>Default Value</literal> tab in the <literal>Field Details</literal> window, clicking on the <literal>Calculate Value</literal> check box, and then entering a Python calculation. You can test this calculation in the <literal>Edit</literal> window.</para>  
    </sect3>

    </sect2>

    <sect2>
    <title>Arranging Layouts</title>
    <para>Each table has <literal>List</literal> and <literal>Details</literal> views, and by default these show all fields in the table, in order of creation. You can edit the layout by choosing <literal>Layout</literal> from the <literal>Developer</literal> menu.</para>
    <para>For the <literal>List</literal> view, you can specify the sequence of field columns, and whether some fields are hidden.</para>
    <para>For the <literal>Details</literal> view, you can create groups of fields, and give these groups titles. You can then place fields in these groups and specify the sequence fo fields in these groups. You can also specify the sequence of these groups. For instance, in a &quot;Contacts&quot; table, you might create a &quot;Name&quot; group, and place the &quot;title&quot;, &quot;first_name&quot; and  &quot;last_name&quot; fields in that group. You might have other groups for the &quot;Address&quot; fields.</para>

    <para>Date and Time fields will be displayed, and entered, in the correct format according to the user's locale, but stored in the database in a canonical form. Therefore, a German user can enter a date in the German format, but this will later be displayed to a U.S. user in the U.S. format.</para>
    </sect2>

    <sect2 id="sec-developer-relationships">
    <title>Creating Relationships</title>
    <para>Tables in the Database are often related together. For instance, an &quot;Invoices&quot; table might have a &quot;Customer ID&quot; field. A value in this field would specify a record in the &quot;Customers&quot; table with the same value. Glom can show extra information, such as the customer name, from that related record. Or it can show a list of several related records - for instance, several related &quot;Invoice Lines&quot; that are related to a record in the &quot;Invoice&quot; record.</para>
    <para>To create relationships, choose <literal>Relationships</literal> from the <literal>Developer</literal> menu. This will show the list of existing relationships. Click the <literal>Add</literal> button to create a new relationship, and enter a name for it. You should then choose a field in the current table, and a field in another table to which it should be related. This relationship will find any records in the other table for which the values in both fields are equal.</para>
   <para>You can use the relationship in the following places.

<orderedlist>
<listitem><simpara>To show a related field on the List or Details view.</simpara></listitem>
<listitem><simpara>To show a list of related records on the Details view.</simpara></listitem>
<listitem><simpara>To lookup a value from a field in a related record. For instance, to copy the current price of a &quot;Product&quot; into the &quot;Price&quot; field of an &quot;Invoice Line&quot; record.</simpara></listitem>
<listitem><simpara>To calculate a field value.</simpara></listitem>
</orderedlist>
   </para>
   </sect2> 

   <sect2>
   <title>Users Administration</title>
   <para>To define the <literal>Operators</literal> who can use your database, and to specify what access they have to the various tables, choose <literal>Users</literal> from the <literal>Developer</literal> menu..</para> 
   </sect2>
  
  </sect1>

<!-- =============Dialogs ================================= -->
<!-- This section contains the help to all dialogs that contain help button -->

<sect1 id="dialogs">
<title>Dialogs</title>
<sect2 id="dialog_new_database">
<title>Dialog: New database</title>

</sect2>

<sect2 id="dialog_error_create_database">
<title>Dialog: Create database</title>

</sect2>

<sect2 id="dialog_connection">
<title>Dialog: Connection</title>

</sect2>

<sect2 id="dialog_database_preferences">
<title>Dialog: Database preferences</title>

</sect2>

<sect2 id="dialog_change_language">
<title>Dialog: Change language</title>

</sect2>

<sect2 id="window_textobject">
<title>Window: Textobject</title>

</sect2>

<sect2 id="window_imageobject">
<title>Window: Imageobject</title>

</sect2>

<sect2 id="dialog_notebook">
<title>Dialog: Notebook</title>

</sect2>

<sect2 id="dialog_data_invalid_format">
<title>Dialog: Data invalid format</title>

</sect2>

<sect2 id="dialog_relationship_overview">
<title>Dialog: Relationship overview</title>

</sect2>

<sect2 id="window_groups">
<title>Window: Groups</title>

</sect2>

<sect2 id="dialog_groupby_sort_fields">
<title>Dialog: Group by sort fields</title>

</sect2>

<sect2 id="dialog_groupby_secondary_fields">
<title>Dialog: Group by secondary fields</title>

</sect2>

<sect2 id="window_button_script">
<title>Window: Button script</title>

</sect2>

<sect2 id="window_field_calculation">
<title>Window: Field calculation</title>

</sect2>

<sect2 id="dialog_new_group">
<title>Dialog: New group</title>

</sect2>

<sect2 id="dialog_choose_user">
<title>Dialog: Choose user</title>

</sect2>

<sect2 id="dialog_user">
<title>Dialog: User</title>

</sect2>

<sect2 id="dialog_translation_identify_original">
<title>Dialog: Translation identify original</title>

</sect2>

<sect2 id="dialog_translation_copy">
<title>Dialog: Translation copy</title>

</sect2>

<sect2 id="dialog_choose_date">
<title>Dialog: Choose Date</title>

</sect2>

</sect1>

<!-- ============= Bugs ================================== -->
<!-- This section is optional and is commented out by default. 
     You can use it to describe known bugs and limitations of the 
	  program if there are any - please be frank and list all
     problems you know of. 
  
  <sect1 id="mayapp-bugs">
  <title>Known Bugs and Limitations</title>
  <para> </para>
 </sect1>
-->
<!-- ============= About ================================== -->
<!-- This section contains info about the program (not docs), such as
      author's name(s), web page, license, feedback address. This
      section is optional: primary place for this info is "About.." box of
      the program. However, if you do wish to include this info in the
      manual, this is the place to put it. Alternatively, you can put this information in the title page.-->
 <sect1 id="&app;-about"> 
    <title>About &app;</title> 
    <para> &app; is maintained by Glom and GNOME community volunteers.
      To find more information about
      &app;, please visit the 
      <ulink url="http://www.glom.org/" type="http">&app; Web
      site</ulink>. </para>
    <para>
      To report a bug or make a suggestion regarding this application or
      this manual, you can submit them using 
      <ulink url="http://bugzilla.gnome.org"   type="help">bugzilla</ulink>.
    </para>

    <para>
      Another excellent source of information are the &app; 
      <ulink url="http://www.glom.org" type="http">mailing lists</ulink>.
    </para>

    <para> This program is distributed under the terms of the GNU
      General Public license as published by the Free Software
      Foundation; either version 2 of the License, or (at your option)
      any later version. A copy of this license can be found at this
      <ulink url="ghelp:gpl" type="help">link</ulink>, or in the file
      COPYING included with the source code of this program. </para>
  </sect1>

  <appendix id="sec-concepts">
  <title>Concepts</title>
  <para>Glom is easy to use, but you must understand the following basic concepts.
<orderedlist>
<listitem><simpara><literal>Database</literal>: Each glom document allows access to one database.</simpara></listitem>
<listitem><simpara><literal>Table</literal>: Each database contains several tables, such as &quot;Customers&quot; and &quot;Invoices&quot; tables.</simpara></listitem>
<listitem><simpara><literal>Field</literal>: Each table has several fields, such as &quot;Customer ID&quot;, &quot;First Name&quot;, and &quot;Date of Birth&quot; fields. In other documents and applications, fields are sometimes called &quot;Columns&quot;</simpara></listitem>
<listitem><simpara><literal>Records</literal>: Each table contains several records, each of which has values for each of the fields. For instance, the &quot;Customers&quot; table will have a record for each customer. In other documents and applications, records are sometimes called <literal>Rows</literal>.</simpara></listitem>
<listitem><simpara><literal>Relationships</literal>: Each table might be related to other tables, via fields in both tables. For instance, a &quot;Customers&quot; table could have a relationship to the &quot;Invoices&quot; table, so that people could see all the invoices for that customer. Only developers need to understand this concept. In other documents and applications, relationships are sometimes called &quot;Joins&quot;.</simpara></listitem> 
</orderedlist>
  </para>
  </appendix>

  <appendix  id="sec-calculated-fields">
  <title>Calculated Fields</title>
  <para>Calculated fields use the Python programming language. The calculation is the implementation of a function whose signature is provided for you.</para>

     <figure id="developer-editing-fields-calculated"> 
	<title>Editing the definition of a calculated field</title> 
	<screenshot> 
	  <mediaobject> 
	    <imageobject><imagedata
		fileref="figures/glom_design_fields_dialog_calculated.png" format="PNG"/> 
	    </imageobject>
	    <textobject> 
	      <phrase>Editing the definition of a calculated field.
	      </phrase> 
	    </textobject> 
	  </mediaobject> 
	</screenshot> 
     </figure>

  <sect1>
  <title>Field values</title>
  <para>For instance, <programlisting>record["name_first"]</programlisting> is the value of the name_first field in the current record.</para>
  </sect1>

  <sect1>
  <title>Related Records</title>
  <para>For instance, <programlisting>record.related["location"]</programlisting> provides the related records for the current record.</para>

  <sect2>
  <title>Single related records</title>
  <para>For relationships that specify a single record, you can get the value of a field in that record. For instance, <programlisting>record.related["location"]["name"]</programlisting> is the value of the name field in the table indicated by the location relationship (often called location::name).</para>
  </sect2>

  <sect2>
  <title>Multiple related records</title>
  <para>For relationships that specify multiple records, you can use the aggregate functions (sum, count, average) to get overall values. For instance, <programlisting>record.related["invoice_lines"].sum("total_price")</programlisting>.</para>
  </sect2>

  </sect1>

  <sect1>
  <title>Testing for empty values</title>
  <para>
  How you test for empty values depends on the type of field:
  </para>

  <sect2>
  <title>Non-text fields</title>
  <para>Non-text fields may be empty, indicating that the user has not entered any value in the field. For instance, Glom does not assume that an empty value in a numeric field should mean 0.</para>
  <para>You can test whether a field is empty by using Python's None. For instance:</para>
  <para>
  <programlisting>
  if(record["contact_id"] == None):
    return "No Contact"
  else:
    return record.related["contacts"]["name_full"]
  </programlisting>
  </para>
  <para>You might also test whether there are any related records. For instance:</para>
  <para>
  <programlisting>
  if(record.related["contacts"] == None):
    return "No Contact"
  else:
    return record.related["contacts"]["name_full"]
  </programlisting>
  </para>
  </sect2>

  <sect2>
  <title>Text fields</title>
  <para>For text fields, you should check for zero-length strings. It is not possible in Glom to distinguish between zero-length strings and the absence of any string, because there is no advantage to doing so. For instance:</para>
  <para>
  <programlisting>
  if(record["name_full"] == ""):
    return "No Name"
  else:
    return record["name_full"]
  </programlisting>
  </para>
  </sect2>

  </sect1>

  </appendix>

 
</article>
