? aclocal.m4
? autom4te.cache
? config.guess
? config.h
? config.log
? config.status
? config.sub
? configure
? glom.desktop.in
? intltool-extract
? intltool-extract.in
? intltool-merge
? intltool-merge.in
? intltool-update
? intltool-update.in
? libtool
? ltmain.sh
? mkinstalldirs
? option_debug.patch
? stamp-h1
? docs/Makefile
? docs/Makefile.in
? docs/user-guide/Makefile
? docs/user-guide/Makefile.in
? docs/user-guide/de/.xml2po.mo
? docs/user-guide/de/glom.xml
? examples/Makefile
? examples/Makefile.in
? glom/layout_item_dialogs/Makefile
? glom/layout_item_dialogs/Makefile.in
? glom/libglom/Makefile
? glom/libglom/Makefile.in
? glom/libglom/data_structure/Makefile
? glom/libglom/data_structure/Makefile.in
? glom/libglom/data_structure/layout/Makefile
? glom/libglom/data_structure/layout/Makefile.in
? glom/libglom/data_structure/layout/report_parts/Makefile
? glom/libglom/data_structure/layout/report_parts/Makefile.in
? glom/libglom/document/Makefile
? glom/libglom/document/Makefile.in
? glom/libglom/python_embed/Makefile
? glom/libglom/python_embed/Makefile.in
? glom/mode_data/Makefile
? glom/mode_data/Makefile.in
? glom/mode_design/Makefile
? glom/mode_design/Makefile.in
? glom/mode_design/fields/Makefile
? glom/mode_design/fields/Makefile.in
? glom/mode_design/users/Makefile
? glom/mode_design/users/Makefile.in
? glom/mode_find/Makefile
? glom/mode_find/Makefile.in
? glom/navigation/Makefile
? glom/navigation/Makefile.in
? glom/python_embed/Makefile
? glom/python_embed/Makefile.in
? glom/python_embed/python_module/Makefile
? glom/python_embed/python_module/Makefile.in
? glom/relationships_overview/Makefile
? glom/relationships_overview/Makefile.in
? glom/reports/Makefile
? glom/reports/Makefile.in
? glom/translation/Makefile
? glom/translation/Makefile.in
? glom/utility_widgets/Makefile
? glom/utility_widgets/Makefile.in
? glom/utility_widgets/test
? glom/utility_widgets/adddel/Makefile
? glom/utility_widgets/adddel/Makefile.in
? glom/utility_widgets/adddel/eggcolumnchooser/Makefile
? glom/utility_widgets/adddel/eggcolumnchooser/Makefile.in
? glom/utility_widgets/db_adddel/Makefile
? glom/utility_widgets/db_adddel/Makefile.in
? icons/Makefile
? icons/Makefile.in
? macros/Makefile
? macros/Makefile.in
? po/stamp-it
Index: glom/application.cc
===================================================================
RCS file: /cvs/gnome/glom/glom/application.cc,v
retrieving revision 1.82
diff -u -p -r1.82 application.cc
--- glom/application.cc	27 May 2006 15:44:14 -0000	1.82
+++ glom/application.cc	21 Jun 2006 19:57:10 -0000
@@ -43,7 +43,8 @@ App_Glom::App_Glom(BaseObjectType* cobje
   m_pFrame(0),
   m_window_translations(0),
   m_menu_tables_ui_merge_id(0),
-  m_menu_reports_ui_merge_id(0)
+  m_menu_reports_ui_merge_id(0),
+  m_show_sql_debug(false)
 {
   //Show the icon in the window manager's window title bar and in the list of running applications:
   set_icon_from_file(GLOM_ICON_DIR "/glom.png");
@@ -97,6 +98,16 @@ bool App_Glom::init(const Glib::ustring&
 
   return true;
   //show_all();
+}
+
+bool App_Glom::get_show_sql_debug() const
+{
+  return m_show_sql_debug;
+}
+
+void App_Glom::set_show_sql_debug(bool val)
+{
+  m_show_sql_debug = val;
 }
 
 void App_Glom::init_layout()
Index: glom/application.h
===================================================================
RCS file: /cvs/gnome/glom/glom/application.h,v
retrieving revision 1.24
diff -u -p -r1.24 application.h
--- glom/application.h	27 May 2006 09:26:33 -0000	1.24
+++ glom/application.h	21 Jun 2006 19:57:10 -0000
@@ -58,6 +58,12 @@ public:
   void fill_menu_tables();
   void fill_menu_reports(const Glib::ustring& table_name);
 
+  ///Whether to show the generated SQL queries on stdout, for debugging.
+  bool get_show_sql_debug() const;
+
+  ///Whether to show the generated SQL queries on stdout, for debugging.
+  void set_show_sql_debug(bool val = true);
+
 protected:
   virtual void init_layout(); //override.
   virtual void init_menus_file(); //override.
@@ -102,6 +108,8 @@ protected:
   Glib::RefPtr<Gtk::ActionGroup> m_refNavTablesActionGroup, m_refNavReportsActionGroup;
   type_listActions m_listNavTableActions, m_listNavReportActions;
   Gtk::UIManager::ui_merge_id m_menu_tables_ui_merge_id, m_menu_reports_ui_merge_id;
+
+  bool m_show_sql_debug;
 };
 
 } //namespace Glom
Index: glom/base_db.cc
===================================================================
RCS file: /cvs/gnome/glom/glom/base_db.cc,v
retrieving revision 1.145
diff -u -p -r1.145 base_db.cc
--- glom/base_db.cc	14 Jun 2006 18:59:32 -0000	1.145
+++ glom/base_db.cc	21 Jun 2006 19:57:11 -0000
@@ -175,16 +175,18 @@ Glib::RefPtr<Gnome::Gda::DataModel> Base
   {
     Glib::RefPtr<Gnome::Gda::Connection> gda_connection = sharedconnection->get_gda_connection();
 
-    /*
-    try
+    const App_Glom* app = get_app_window();
+    if(app && app->get_show_sql_debug())
     {
-      std::cout << "Debug: query_execute():  " << strQuery << std::endl;
+      try
+      {
+        std::cout << "Debug: query_execute():  " << strQuery << std::endl;
+      }
+      catch(const Glib::Exception& ex)
+      {
+        std::cout << "Debug: query string could not be converted to std::cout: " << ex.what() << std::endl;
+      }
     }
-    catch(const Glib::Exception& ex)
-    {
-      std::cout << "Debug: query string could not be converted to std::cout: " << ex.what() << std::endl;
-    }
-    */
 
     result = gda_connection->execute_single_command(strQuery);
     if(!result)
Index: glom/main.cc
===================================================================
RCS file: /cvs/gnome/glom/glom/main.cc,v
retrieving revision 1.30
diff -u -p -r1.30 main.cc
--- glom/main.cc	27 May 2006 09:26:33 -0000	1.30
+++ glom/main.cc	21 Jun 2006 19:57:11 -0000
@@ -34,21 +34,25 @@
 
 #include "application.h"
 
+namespace Glom
+{
 
-class ExampleOptionGroup : public Glib::OptionGroup
+class OptionGroup : public Glib::OptionGroup
 { 
 public:
-  ExampleOptionGroup();
+  OptionGroup();
 
   //These int instances should live as long as the OptionGroup to which they are added, 
   //and as long as the OptionContext to which those OptionGroups are added.
   std::string m_arg_filename;
   bool m_arg_version;
+  bool m_arg_debug_sql;
 };
 
-ExampleOptionGroup::ExampleOptionGroup()
+OptionGroup::OptionGroup()
 : Glib::OptionGroup("Glom", _("Glom options"), _("Command-line options for glom")),
-  m_arg_version(false)
+  m_arg_version(false),
+  m_arg_debug_sql(false)
 {
   Glib::OptionEntry entry;
   entry.set_long_name("file");
@@ -61,8 +65,14 @@ ExampleOptionGroup::ExampleOptionGroup()
   entry_version.set_short_name('V');
   entry_version.set_description(_("The version of this application."));
   add_entry(entry_version, m_arg_version);
+
+  Glib::OptionEntry entry_debug_sql;
+  entry_version.set_long_name("debug_sql");
+  entry_version.set_description(_("Show the generated SQL queries on stdout, for debugging."));
+  add_entry(entry_version, m_arg_version);
 }
 
+} //namespace Glom
 
 int 
 main(int argc, char* argv[])
@@ -76,7 +86,7 @@ main(int argc, char* argv[])
 
   Glib::OptionContext context;
 
-  ExampleOptionGroup group;
+  Glom::OptionGroup group;
   context.set_main_group(group);
 
   try
@@ -140,6 +150,7 @@ main(int argc, char* argv[])
     refXml->get_widget_derived("window_main", pApp_Glom);
 
     pApp_Glom->set_command_line_args(argc, argv);
+    pApp_Glom->set_show_sql_debug(group.m_arg_debug_sql);
 
     bool test = pApp_Glom->init(input_uri); //Sets it up and shows it.
     if(test) //The user could cancel the offer of a new or existing database.
